{"version":3,"sources":["app.js"],"names":["iniciarApp","quitarAlerta","mostrarConfirmacionEliminar","colapsarMenu","mostrarEstadisticas","location","pathname","mostrarGraficaVentas","async","url","res","fetch","json","meses","map","MES","parseInt","mostrarGrafica","VENTA_MES","error","console","log","chart","type","labels","label","data","backgroundColor","borderColor","ctx","document","getElementById","getContext","Chart","datasets","borderWidth","options","scales","y","beginAtZero","$alerta","querySelector","body","contains","includes","setTimeout","classList","add","remove","$formularioEliminar","querySelectorAll","mostrarConfirmacion","$panelAdmin","$btnMenu","$opcionesMenu","textoOpciones","hoverBtnMenu","addEventListener","e","style","gridTemplateColumns","forEach","$opcionMenu","i","lastChild","textContent","parentElement","nextElementSibling","$elemento","textButtonHover","textButton","transition","target","fontSize","fontWeight","innerHTML","$formDelete","textConfirm","formulario","preventDefault","modalConfirmacion","formDelete","title","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","customClass","popup","htmlContainer","actions","confirmButton","cancelButton","then","result","isConfirmed","submit"],"mappings":"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","file":"app.js","sourcesContent":["\r\n\r\ndocument.addEventListener('DOMContentLoaded',() => iniciarApp());\r\n\r\n\r\n\r\nfunction iniciarApp(){\r\n  quitarAlerta(); //? Quita una alerta despues de unos segundos\r\n  mostrarConfirmacionEliminar(); //? Muestra Modal de confirmacion \r\n  colapsarMenu(); //? Colapsa el menu de navegación\r\n  mostrarEstadisticas(); //? Muestra los graficos estadisticos\r\n} \r\n\r\n// TODO: Funcionalidades de Reportes estadisticos\r\nfunction mostrarEstadisticas() {\r\n  if (location.pathname === '/estadisticas') {\r\n    mostrarGraficaVentas();\r\n  }\r\n}\r\n\r\nasync function mostrarGraficaVentas() {\r\n  try {\r\n    const url = 'http://127.0.0.1:3000/api/ventas';\r\n    const res = await fetch(url);\r\n    const json = await res.json();\r\n    // console.log(json);\r\n\r\n    const meses = json.map(({ MES }) => {\r\n      let mes = parseInt(MES);\r\n\r\n      switch (mes) {\r\n        case 1:\r\n          return 'Enero';\r\n        case 2:\r\n          return 'Febrero';\r\n        case 3:\r\n          return 'Marzo';\r\n        case 4:\r\n          return 'Abril';\r\n        case 5:\r\n          return 'Mayo';\r\n        case 6:\r\n          return 'Junio';\r\n        case 7:\r\n          return 'Julio';\r\n        case 8:\r\n          return 'Agosto';\r\n        case 9:\r\n          return 'Septiembre';\r\n        case 10:\r\n          return 'Octubre';\r\n        case 11:\r\n          return 'Noviembre';\r\n        case 12:\r\n          return 'Diciembre';\r\n        default:\r\n          break;\r\n      }\r\n\r\n    });\r\n    // console.log(meses);\r\n\r\n    const ventasMes = json.map(({ VENTA_MES }) => parseInt(VENTA_MES));\r\n    // console.log(ventasMes);\r\n\r\n\r\n\r\n    let datosVenta = [\r\n      'graficoVentas',\r\n      'line',\r\n      meses,\r\n      'Ventas por mes',\r\n      ventasMes,\r\n      '#b8a11e',\r\n      '#b8a11e80'\r\n    ];\r\n\r\n    mostrarGrafica(...datosVenta);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction mostrarGrafica(chart,type,labels,label,data,backgroundColor,borderColor) {\r\n  const ctx = document.getElementById(chart).getContext('2d');\r\n  // console.log(ctx);\r\n  const myChart = new Chart(ctx, {\r\n    type,\r\n    data: {\r\n      labels,\r\n      datasets: [{\r\n        label,\r\n        data,\r\n        backgroundColor,\r\n        borderColor,\r\n        borderWidth: 1\r\n      }]\r\n    },\r\n    options: {\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true\r\n        }\r\n      }\r\n    }\r\n  });\r\n  \r\n}\r\n\r\n\r\n// TODO: Funcionalidades de Reservas de Admin \r\nfunction quitarAlerta(){\r\n  const $alerta = document.querySelector('.alerta');\r\n  \r\n  if (document.body.contains($alerta) && !location.pathname.includes('/crear') &&\r\n  !location.pathname.includes('/actualizar')) {\r\n    setTimeout(() => {\r\n      $alerta.classList.add('active');\r\n    }, 3000);\r\n\r\n    setTimeout(() => {\r\n      $alerta.remove();\r\n    }, 4000);\r\n  }\r\n}\r\n\r\n\r\nfunction mostrarConfirmacionEliminar(){\r\n  const $formularioEliminar = document.querySelectorAll('.formulario-eliminar');\r\n  \r\n  if (location.pathname === '/usuarios') {\r\n    mostrarConfirmacion($formularioEliminar,'¿Estas seguro que quieres eliminar un usuario?');\r\n  }else if (location.pathname === '/habitaciones') {\r\n    mostrarConfirmacion($formularioEliminar,'¿Estas seguro que quieres eliminar una habitación?');\r\n  }else if(location.pathname === '/clientes'){\r\n    mostrarConfirmacion($formularioEliminar,'¿Estas seguro que quieres eliminar un cliente?');\r\n  }else if(location.pathname === '/huespedes'){\r\n    mostrarConfirmacion($formularioEliminar,'¿Estas seguro que quieres eliminar un huésped?');\r\n  }else{\r\n    return;\r\n  }\r\n\r\n  \r\n\r\n}\r\n\r\nfunction colapsarMenu(){\r\n  const $panelAdmin = document.querySelector('.panel-admin');\r\n  const $btnMenu = document.querySelector('.boton-menu');\r\n  const $opcionesMenu = document.querySelectorAll('.navegacion summary');\r\n  let textoOpciones = [];\r\n  \r\n  hoverBtnMenu($btnMenu,'&larr;','Menú de Administración'); \r\n  \r\n  $btnMenu.addEventListener('click',e => {\r\n    $panelAdmin.style.gridTemplateColumns = '8% 92%';\r\n    \r\n    $opcionesMenu.forEach(($opcionMenu,i) => {\r\n      textoOpciones = [...textoOpciones,$opcionMenu.lastChild.textContent];\r\n      \r\n      if ($opcionMenu.parentElement.classList.contains('active')) {\r\n        hoverBtnMenu($btnMenu,'&larr;','Menú de Administración'); \r\n        $panelAdmin.style.gridTemplateColumns = '20% 80%';\r\n        $opcionMenu.lastChild.textContent = textoOpciones[i];\r\n        $opcionMenu.parentElement.classList.remove('active');\r\n        $opcionMenu.nextElementSibling.classList.remove('active');\r\n        \r\n      } else {\r\n        hoverBtnMenu($btnMenu,'&rarr;','&rarr;'); \r\n        $opcionMenu.lastChild.textContent = '';\r\n        $opcionMenu.parentElement.classList.add('active')\r\n        $opcionMenu.nextElementSibling.classList.add('active');\r\n        \r\n      }\r\n    });\r\n  });\r\n\r\n\r\n}\r\n\r\nfunction hoverBtnMenu($elemento,textButtonHover,textButton){\r\n  $elemento.style.transition = 'all 0.4s ease-in';\r\n\r\n  //* Evento que se emite al entrar el cursor al elemento\r\n  $elemento.addEventListener('mouseover',e => {\r\n    e.target.style.fontSize = '1.6rem';\r\n    e.target.style.fontWeight = '700';\r\n    e.target.innerHTML = textButtonHover;\r\n      \r\n    \r\n    \r\n  });\r\n  \r\n  //* Evento que se emite al sacar el cursor del elemento\r\n  $elemento.addEventListener('mouseout',e => {\r\n    e.target.style.fontSize = '1.6rem';\r\n    e.target.innerHTML = textButton;\r\n      \r\n  });\r\n}\r\n\r\nfunction mostrarConfirmacion($formDelete,textConfirm){\r\n  $formDelete.forEach(formulario => {\r\n    formulario.addEventListener('submit',e => {\r\n      e.preventDefault();\r\n      modalConfirmacion(e.target,textConfirm);\r\n    });\r\n  });\r\n}\r\n\r\n\r\nfunction modalConfirmacion(formDelete,title){\r\n  Swal.fire({\r\n    title,\r\n    text: \"¡No podrás revertir esto!\",\r\n    icon: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#3085d6',\r\n    cancelButtonColor: '#d33',\r\n    confirmButtonText: '¡Si, Elimínalo!',\r\n    cancelButtonText: 'Cancelar',\r\n    customClass: {\r\n      popup: 'modal',\r\n      icon: 'modal-icon',\r\n      title: 'modal-title',\r\n      htmlContainer: 'modal-warning',\r\n      actions: 'modal-btns',\r\n      confirmButton: 'modal-btn-confirm',\r\n      cancelButton: 'modal-btn-cancel',\r\n    },\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      formDelete.submit();\r\n    }\r\n  });\r\n}"]}